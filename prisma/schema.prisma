// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tasks     Task[]
  profile   Profile?
}

model Profile {
  bio    String?
  gender Gender
  user   User    @relation(fields: [userId], references: [id])
  userId Int     @unique

  @@id([userId])
}

model Task {
  id          Int     @id @default(autoincrement())
  title       String
  details     String?
  isCompleted Boolean @default(false)

  user   User @relation(fields: [userId], references: [id])
  userId Int

  parentTaskId Int?

  childTasks Task[] @relation("ChildTasks")
  parentTask Task?  @relation("ChildTasks", fields: [parentTaskId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tags TaskTag[]
}

model Tag {
  id   Int    @id @default(autoincrement())
  name String

  tasks TaskTag[]
}

model TaskTag {
  task   Task @relation(fields: [taskId], references: [id])
  taskId Int

  tag   Tag @relation(fields: [tagId], references: [id])
  tagId Int

  created_at DateTime @default(now())
  note       String?

  @@id([taskId, tagId])
}
